openapi: "3.0.0"
info:
  title: "scrubarr API"
  version: "0.0.1"
paths:
  /entry-mappings:
    get:
      operationId: "getEntryMappings"
      summary: "Get a list of entry mappings."
      parameters:
        - in: "query"
          name: "page"
          required: true
          schema:
            type: "integer"
            minimum: 1
          description: "The page number to display."
        - in: "query"
          name: "pageSize"
          required: true
          schema:
            type: "integer"
            minimum: 10
            maximum: 100
          description: "The amount of items to display per each page."
        - in: "query"
          name: "filter"
          description: "The filter to apply before returning the entries."
          schema:
            type: string
            enum:
              - "incomplete_entries"
              - "complete_entries"
        - in: "query"
          name: "sortBy"
          description: "The criteria to sort the entries by."
          schema:
            type: string
            enum:
              - "date_added_asc"
              - "date_added_desc"
              - "size_asc"
              - "size_desc"
        - in: "query"
          name: "name"
          description: "The name of the entry to search for."
          schema:
            type: string
      responses:
        "200":
          description: "A successful response."
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - "entries"
                  - "totalAmount"
                properties:
                  entries:
                    type: "array"
                    items:
                      $ref: "./components/schemas/EntryMapping.yaml"
                  totalAmount:
                    type: "integer"
                    description: "The total amount of entries that could be returned for the provided filter."
        "4XX":
          $ref: "./responses/ErrorResponse.yaml"
        "5XX":
          $ref: "./responses/ErrorResponse.yaml"
      security:
        - BearerAuth: [ ]
    post:
      operationId: "refreshEntryMappings"
      summary: "Trigger a refresh of the entry mappings."
      responses:
        "200":
          description: "A successful response."
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - "message"
                properties:
                  message:
                    type: "string"
                    description: "The status message to display."
        "4XX":
          $ref: "./responses/ErrorResponse.yaml"
        "5XX":
          $ref: "./responses/ErrorResponse.yaml"
      security:
        - BearerAuth: [ ]
  /retrievers:
    get:
      operationId: "getRetrievers"
      summary: "Get a list of retrievers."
      responses:
        "200":
          description: "A successful response."
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - "retrievers"
                properties:
                  retrievers:
                    type: "array"
                    items:
                      $ref: "./components/schemas/Retriever.yaml"
        "4XX":
          $ref: "./responses/ErrorResponse.yaml"
        "5XX":
          $ref: "./responses/ErrorResponse.yaml"
      security:
        - BearerAuth: [ ]
  /stats:
    get:
      operationId: "getStats"
      summary: "Get the statistics of the application."
      responses:
        "200":
          description: "A successful response."
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - "stats"
                properties:
                  stats:
                    $ref: "./components/schemas/Stats.yaml"
        "4XX":
          $ref: "./responses/ErrorResponse.yaml"
        "5XX":
          $ref: "./responses/ErrorResponse.yaml"
      security:
        - BearerAuth: [ ]
  /login:
    post:
      operationId: "login"
      summary: "Login to the application using the provided credentials."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas/LoginRequestBody.yaml"
      responses:
        "200":
          description: "A successful response indicating that the login was successful."
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - "message"
                  - "token"
                properties:
                  message:
                    type: string
                    example: "Ok"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c" #gitleaks:allow
        "401":
          description: "The login attempt has failed."
          content:
            application/json:
              schema:
                $ref: "./components/schemas/ErrorResponseBody.yaml"
              example:
                error: "login failed"
                detail: "username and password combination does not match"
        "4XX":
          $ref: "./responses/ErrorResponse.yaml"
        "5XX":
          $ref: "./responses/ErrorResponse.yaml"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
